{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["range","size","startAt","Array","keys","map","i","mapRange","value","low1","high1","low2","high2","PlusSide","trackerValue","setTrackerValue","pointRange","reverse","flexStyles","css","textStyles","v","className","thisVal","reverseVal","ColorButton","withStyles","theme","root","backgroundColor","Button","variant","onClick","toFixed","MinusSide","Content","useState","useEffect","confetti","styles","ControlPanel","Score","App","contentStyles","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a29947b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { css } from '@emotion/css'\nimport { withStyles } from '@material-ui/core/styles';\nimport confetti from 'canvas-confetti';\n\nfunction range(size, startAt = 0) {\n  return [...Array(size).keys()].map(i => i + startAt);\n}\n\nfunction mapRange(value, low1, high1, low2, high2) {\n  return low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n}\n\nconst PlusSide = ({trackerValue, setTrackerValue}) => {\n  const pointRange = range(4, 1).reverse();\n  const flexStyles = css`\n    display: flex;\n    flex-direction: column-reverse;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    left: 50px;\n  `;\n  const buttonContainer = (v) => css`\n    margin-bottom: 10px;\n    padding-right: ${v * 28}px;\n  `;\n  const textStyles = (v) => css`\n    width: ${v * 7 + 40}px;\n    height: ${v * 2 + 30}px;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    color: white;\n    font-weight: ${v < 4 ? 400 : 700};\n    font-size: ${v * 4 + 10}px;\n    font-family: 'Source Serif Pro', serif;\n  `;\n\n  return (\n    <div className={flexStyles}>\n    {\n      pointRange.map((value) => {\n        const thisVal = value * 0.25;\n        const reverseVal = (5 - value)\n        const ColorButton = withStyles((theme) => ({\n          root: {\n            backgroundColor: `hsl(${135 + reverseVal * 10}, ${reverseVal * 90}%, ${45 - reverseVal * 2}%)`,\n          },\n        }))(Button);\n        return (\n          <div className={buttonContainer(value)}>\n            <ColorButton\n              variant=\"contained\"\n              onClick={() => {\n                setTrackerValue(trackerValue + thisVal)\n              }} \n            >\n              <div className={textStyles(value)}>+ {value < 4 ? thisVal.toFixed(2) : thisVal}</div>\n            </ColorButton>\n          </div>\n        );\n      })\n    }\n    </div>\n  );\n}\n\nconst MinusSide = ({trackerValue, setTrackerValue}) => {\n  const pointRange = range(4, 1).reverse();\n  const flexStyles = css`\n    display: flex;\n    flex-direction: column-reverse;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    right: 50px;\n  `;\n  const buttonContainer = (v) => css`\n    margin-bottom: 10px;\n    padding-left: ${v * 28}px;\n  `;\n  const textStyles = (v) => css`\n    width: ${v * 7 + 40}px;\n    height: ${v * 2 + 30}px;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    color: white;\n    font-weight: ${v < 4 ? 400 : 700};\n    font-size: ${v * 4 + 10}px;\n    font-family: 'Source Serif Pro', serif;\n  `;\n  return (\n    <div className={flexStyles}>\n    {\n      pointRange.map((value) => {\n        const thisVal = value * 0.25;\n        const reverseVal = (5 - value)\n        const ColorButton = withStyles((theme) => ({\n          root: {\n            backgroundColor: `hsl(${355 + reverseVal * 10}, ${reverseVal * 90}%, ${45 - reverseVal * 2}%)`,\n          },\n        }))(Button);\n        return (\n          <div className={buttonContainer(value)}>\n            <ColorButton\n              variant=\"contained\"\n              onClick={() => setTrackerValue(trackerValue - thisVal)} \n            >\n              <div className={textStyles(value)}>- {value < 4 ? thisVal.toFixed(2) : thisVal}</div>\n            </ColorButton>\n          </div>\n        );\n      })\n    }\n    </div>\n  );\n}\n\nconst Content = () => {\n  const [trackerValue, setTrackerValue] = useState(0);\n  \n  useEffect(() => {\n    if (trackerValue >= 12) {\n      confetti();\n    }\n  }, [trackerValue]);\n\n  const styles = css`\n    display: flex;\n    width: calc(100% - 20px);\n    height: calc(100% - 20px);\n    position: relative;\n    background-color: white;\n    border: 10px solid green;\n    flex-direction: column;\n  `;\n\n  const ControlPanel = () => {\n    const flexStyles = css`\n      display: flex;\n      flex-grow: 1;\n      position: relative;\n      height: 100px;\n      width: calc(100% - 20px);\n      background-color: white;\n      align-items: center;\n      justify-content: center;\n      border: 10px solid rgb(237, 162, 110);\n    `;\n    return (\n      <div className={flexStyles}>\n        <PlusSide trackerValue={trackerValue} setTrackerValue={setTrackerValue}/>\n        <MinusSide trackerValue={trackerValue} setTrackerValue={setTrackerValue}/>\n      </div>\n    );\n  }\n\n  const Score = () => {\n    const scoreStyles = (v) => css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 8em;\n      flex-grow: 1;\n      font-weight: 700;\n      color: hsl(${mapRange(v, 0, 12, 240, 360)}, ${mapRange(v, 0, 12, 20, 100)}%, ${mapRange(v, 0, 12, 30, 60)}%);\n    `;\n    return (\n      <div className={scoreStyles(trackerValue)}>\n        {trackerValue.toFixed(2)}\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles}>\n      <Score/>\n      <ControlPanel/>\n    </div>\n  );\n}\n\nfunction App() {\n  const contentStyles = css`\n    width: 100vw;\n    height: 100vh;\n    font-family: 'Source Serif Pro', serif;\n  `;\n  return (\n    <div className={contentStyles}>\n      <Content/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}